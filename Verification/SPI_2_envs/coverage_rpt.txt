Coverage Report by instance with details

=================================================================================
=== Instance: /top/spi_intf
=== Design Unit: work.SPI_IF
=================================================================================
Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         16         0        16     0.00%

================================Toggle Details================================

Toggle Coverage for instance /top/spi_intf --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                              MISO           0           0        0.00 
                                              MOSI           0           0        0.00 
                                              SS_n           0           0        0.00 
                                               clk           0           0        0.00 
                                    dut_state[2-0]           0           0        0.00 
                                             rst_n           0           0        0.00 

Total Node Count     =          8 
Toggled Node Count   =          0 
Untoggled Node Count =          8 

Toggle Coverage      =       0.00% (0 of 16 bins)

=================================================================================
=== Instance: /top/spi_intf_golden
=== Design Unit: work.SPI_IF
=================================================================================
Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         16         0        16     0.00%

================================Toggle Details================================

Toggle Coverage for instance /top/spi_intf_golden --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                              MISO           0           0        0.00 
                                              MOSI           0           0        0.00 
                                              SS_n           0           0        0.00 
                                               clk           0           0        0.00 
                                    dut_state[2-0]           0           0        0.00 
                                             rst_n           0           0        0.00 

Total Node Count     =          8 
Toggled Node Count   =          0 
Untoggled Node Count =          8 

Toggle Coverage      =       0.00% (0 of 16 bins)

=================================================================================
=== Instance: /top/RAM_intf_DUT
=== Design Unit: work.RAM_intf
=================================================================================
Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         44         0        44     0.00%

================================Toggle Details================================

Toggle Coverage for instance /top/RAM_intf_DUT --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                               clk           0           0        0.00 
                                          din[9-0]           0           0        0.00 
                                         dout[7-0]           0           0        0.00 
                                             rst_n           0           0        0.00 
                                          rx_valid           0           0        0.00 
                                          tx_valid           0           0        0.00 

Total Node Count     =         22 
Toggled Node Count   =          0 
Untoggled Node Count =         22 

Toggle Coverage      =       0.00% (0 of 44 bins)

=================================================================================
=== Instance: /top/RAM_intf_Golden
=== Design Unit: work.RAM_intf
=================================================================================
Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         44         0        44     0.00%

================================Toggle Details================================

Toggle Coverage for instance /top/RAM_intf_Golden --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                               clk           0           0        0.00 
                                          din[9-0]           0           0        0.00 
                                         dout[7-0]           0           0        0.00 
                                             rst_n           0           0        0.00 
                                          rx_valid           0           0        0.00 
                                          tx_valid           0           0        0.00 

Total Node Count     =         22 
Toggled Node Count   =          0 
Untoggled Node Count =         22 

Toggle Coverage      =       0.00% (0 of 44 bins)

=================================================================================
=== Instance: /top/DUT/m1
=== Design Unit: work.project
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        37         0        37     0.00%

================================Branch Details================================

Branch Coverage for instance /top/DUT/m1

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File project_spi.v
------------------------------------IF Branch------------------------------------
    21                                   ***0***     Count coming in to IF
    21              1                    ***0***     if(rst_n==0)
    23              1                    ***0***     else cs<=ns;
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------CASE Branch------------------------------------
    28                                   ***0***     Count coming in to CASE
    29              1                    ***0***     IDLE: begin
    35              1                    ***0***     CHK_CMD: 
    50              1                    ***0***     WRITE: 
    57              1                    ***0***     READ_ADD:
    65              1                    ***0***     READ_DATA:
    73              1                    ***0***     default:ns=IDLE;
Branch totals: 0 hits of 6 branches = 0.00%

------------------------------------IF Branch------------------------------------
    30                                   ***0***     Count coming in to IF
    30              1                    ***0***     if(SS_n==0)
    32              1                    ***0***     else
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    37                                   ***0***     Count coming in to IF
    37              1                    ***0***     if(SS_n==1)
    39              1                    ***0***     else if(SS_n==0 && MOSI==0)
    41              1                    ***0***     else if(SS_n==0 && MOSI==1 && flag==1)
    45              1                    ***0***     else 
Branch totals: 0 hits of 4 branches = 0.00%

------------------------------------IF Branch------------------------------------
    52                                   ***0***     Count coming in to IF
    52              1                    ***0***     if(SS_n==0)
    54              1                    ***0***     else
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    59                                   ***0***     Count coming in to IF
    59              1                    ***0***     if(SS_n==0)
    62              1                    ***0***     else
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    67                                   ***0***     Count coming in to IF
    67              1                    ***0***     if(SS_n==0)
    69              1                    ***0***     else
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    81                                   ***0***     Count coming in to IF
    81              1                    ***0***     if(!rst_n) begin
    88              1                    ***0***     else begin
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------CASE Branch------------------------------------
    90                                   ***0***     Count coming in to CASE
    92              1                    ***0***     IDLE:
    101             1                    ***0***     WRITE:begin
    116             1                    ***0***     READ_ADD:begin
    131             1                    ***0***     READ_DATA: begin    
                                         ***0***     All False Count
Branch totals: 0 hits of 5 branches = 0.00%

------------------------------------IF Branch------------------------------------
    102                                  ***0***     Count coming in to IF
    102             1                    ***0***     if(i==0) begin
    108             1                    ***0***     else begin
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    117                                  ***0***     Count coming in to IF
    117             1                    ***0***     if(i==0) begin
    124             1                    ***0***     else begin
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    133                                  ***0***     Count coming in to IF
    133             1                    ***0***     if(i==0) begin
    139             1                    ***0***     else begin
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    145                                  ***0***     Count coming in to IF
    145             1                    ***0***     if(tx_valid==1) begin
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    148                                  ***0***     Count coming in to IF
    148             1                    ***0***        if(k==7) begin
    152             1                    ***0***        else begin
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       9         0         9     0.00%

================================Condition Details================================

Condition Coverage for instance /top/DUT/m1 --

  File project_spi.v
----------------Focused Condition View-------------------
Line       39 Item    1  (SS_n ~| MOSI)
Condition totals: 0 of 2 input terms covered = 0.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
        SS_n         N  No hits                  Hit '_0' and '_1'
        MOSI         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  SS_n_0                ~MOSI                         
  Row   2:    ***0***  SS_n_1                ~MOSI                         
  Row   3:    ***0***  MOSI_0                ~SS_n                         
  Row   4:    ***0***  MOSI_1                ~SS_n                         

----------------Focused Condition View-------------------
Line       41 Item    1  ((~SS_n && MOSI) && flag)
Condition totals: 0 of 3 input terms covered = 0.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
        SS_n         N  No hits                  Hit '_0' and '_1'
        MOSI         N  No hits                  Hit '_0' and '_1'
        flag         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  SS_n_0                (flag && MOSI)                
  Row   2:    ***0***  SS_n_1                -                             
  Row   3:    ***0***  MOSI_0                ~SS_n                         
  Row   4:    ***0***  MOSI_1                (flag && ~SS_n)               
  Row   5:    ***0***  flag_0                (~SS_n && MOSI)               
  Row   6:    ***0***  flag_1                (~SS_n && MOSI)               

----------------Focused Condition View-------------------
Line       102 Item    1  (i == 0)
Condition totals: 0 of 1 input term covered = 0.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
    (i == 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (i == 0)_0            -                             
  Row   2:    ***0***  (i == 0)_1            -                             

----------------Focused Condition View-------------------
Line       117 Item    1  (i == 0)
Condition totals: 0 of 1 input term covered = 0.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
    (i == 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (i == 0)_0            -                             
  Row   2:    ***0***  (i == 0)_1            -                             

----------------Focused Condition View-------------------
Line       133 Item    1  (i == 0)
Condition totals: 0 of 1 input term covered = 0.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
    (i == 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (i == 0)_0            -                             
  Row   2:    ***0***  (i == 0)_1            -                             

----------------Focused Condition View-------------------
Line       148 Item    1  (k == 7)
Condition totals: 0 of 1 input term covered = 0.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
    (k == 7)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (k == 7)_0            -                             
  Row   2:    ***0***  (k == 7)_1            -                             


FSM Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    FSM States                       5         0         5     0.00%
    FSM Transitions                  8         0         8     0.00%

================================FSM Details================================

FSM Coverage for instance /top/DUT/m1 --

FSM_ID: cs
    Current State Object : cs
    ----------------------
    State Value MapInfo :
    ---------------------
Line          State Name               Value
----          ----------               -----
  29                IDLE                   0
  35             CHK_CMD                   1
  57            READ_ADD                   4
  65           READ_DATA                   3
  50               WRITE                   2
    Uncovered States :
    ------------------
                   State
                   -----
                    IDLE
                 CHK_CMD
                READ_ADD
               READ_DATA
                   WRITE
    Uncovered Transitions :
    -----------------------
Line            Trans_ID          Transition          
----            --------          ----------          
  31                   0          IDLE -> CHK_CMD     
  47                   1          CHK_CMD -> READ_ADD 
  43                   2          CHK_CMD -> READ_DATA
  40                   3          CHK_CMD -> WRITE    
  38                   4          CHK_CMD -> IDLE     
  63                   5          READ_ADD -> IDLE    
  70                   6          READ_DATA -> IDLE   
  55                   7          WRITE -> IDLE       


    Summary                       Bins      Hits    Misses  Coverage
    -------                       ----      ----    ------  --------
        FSM States                   5         0         5     0.00%
        FSM Transitions              8         0         8     0.00%
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      50         0        50     0.00%

================================Statement Details================================

Statement Coverage for instance /top/DUT/m1 --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File project_spi.v
    1                                                module project(MOSI,MISO,SS_n,clk,rst_n,rx_data,rx_valid,tx_data,tx_valid);
    2                                                parameter IDLE=3'b000;
    3                                                parameter CHK_CMD=3'b001;
    4                                                parameter WRITE=3'b010;
    5                                                parameter READ_DATA=3'b011;
    6                                                parameter READ_ADD=3'b100;
    7                                                
    8                                                
    9                                                input MOSI,SS_n,clk,rst_n,tx_valid;
    10                                               input[7:0] tx_data;
    11                                               output reg [9:0] rx_data;
    12                                               output reg rx_valid;
    13                                               output reg MISO;
    14                                               
    15                                               reg flag;
    16                                               reg [2:0] cs,ns;
    17                                               reg[3:0] i,k;
    18                                               
    19              1                    ***0***     always@(posedge clk or negedge rst_n)
    20                                               begin
    21                                               if(rst_n==0)
    22              1                    ***0***     cs<=IDLE;
    23              1                    ***0***     else cs<=ns;
    24                                               end
    25                                               
    26              1                    ***0***     always@(cs,SS_n,MOSI)
    27                                               begin
    28                                               case(cs)
    29                                               IDLE: begin
    30                                               if(SS_n==0)
    31              1                    ***0***     ns=CHK_CMD;
    32                                               else
    33              1                    ***0***     ns<=IDLE;
    34                                               end
    35                                               CHK_CMD: 
    36                                               begin
    37                                               if(SS_n==1)
    38              1                    ***0***     ns<=IDLE;
    39                                               else if(SS_n==0 && MOSI==0)
    40              1                    ***0***     ns=WRITE;
    41                                               else if(SS_n==0 && MOSI==1 && flag==1)
    42                                               begin
    43              1                    ***0***     ns=READ_DATA;
    44                                               end
    45                                               else 
    46                                               begin
    47              1                    ***0***     ns=READ_ADD;
    48                                               end
    49                                               end
    50                                               WRITE: 
    51                                               begin
    52                                               if(SS_n==0)
    53              1                    ***0***     ns=WRITE;
    54                                               else
    55              1                    ***0***     ns=IDLE;
    56                                               end
    57                                               READ_ADD:
    58                                               begin
    59                                               if(SS_n==0)
    60              1                    ***0***     ns=READ_ADD;
    61                                               
    62                                               else
    63              1                    ***0***     ns=IDLE;
    64                                               end
    65                                               READ_DATA:
    66                                               begin
    67                                               if(SS_n==0)
    68              1                    ***0***     ns=READ_DATA;
    69                                               else
    70              1                    ***0***     ns=IDLE;
    71                                               end
    72                                               
    73              1                    ***0***     default:ns=IDLE;
    74                                               
    75                                               endcase
    76                                               end
    77                                               
    78              1                    ***0***     always@(posedge clk or negedge rst_n)
    79                                               begin
    80                                               
    81                                               if(!rst_n) begin
    82              1                    ***0***           rx_valid<=0;
    83              1                    ***0***           MISO<=0;
    84              1                    ***0***           rx_data<=0;
    85              1                    ***0***           flag<=0;
    86                                                     end
    87                                               
    88                                               else begin
    89                                               
    90                                               case (cs)
    91                                               
    92                                               IDLE:
    93                                               begin
    94              1                    ***0***           rx_valid<=0;
    95              1                    ***0***           MISO<=0;
    96              1                    ***0***           i<=9;
    97              1                    ***0***           k<=0;
    98                                                     end
    99                                               
    100                                              
    101                                              WRITE:begin
    102                                              if(i==0) begin
    103             1                    ***0***     rx_data[i]<=MOSI;
    104             1                    ***0***     rx_valid<=1;
    105             1                    ***0***     i<=9;
    106                                              end
    107                                              
    108                                              else begin
    109             1                    ***0***     rx_data[i]<=MOSI;
    110             1                    ***0***     i<=i-1;
    111             1                    ***0***     rx_valid<=0;
    112                                              end
    113                                              
    114                                              end
    115                                              
    116                                              READ_ADD:begin
    117                                              if(i==0) begin
    118             1                    ***0***     rx_data[i]<=MOSI;
    119             1                    ***0***     rx_valid<=1;
    120             1                    ***0***     flag<=1;
    121             1                    ***0***     i<=9;
    122                                              end
    123                                              
    124                                              else begin
    125             1                    ***0***     rx_data[i]<=MOSI;
    126             1                    ***0***     i<=i-1;
    127             1                    ***0***     rx_valid<=0;
    128                                              end
    129                                              end
    130                                              
    131                                              READ_DATA: begin    
    132                                                    
    133                                              if(i==0) begin
    134             1                    ***0***     rx_valid<=1;
    135             1                    ***0***     rx_data[i]<=MOSI;
    136             1                    ***0***     i<=9;
    137                                              end
    138                                              
    139                                              else begin
    140             1                    ***0***     rx_data[i]<=MOSI;
    141             1                    ***0***     i<=i-1;
    142             1                    ***0***     rx_valid<=0;
    143                                              end
    144                                              
    145                                              if(tx_valid==1) begin
    146                                              
    147             1                    ***0***        rx_valid<=0;
    148                                                 if(k==7) begin
    149             1                    ***0***        flag<=0;
    150             1                    ***0***        MISO<=tx_data[7-k];
    151                                                 end
    152                                                 else begin
    153             1                    ***0***        MISO<=tx_data[7-k];
    154             1                    ***0***        k=k+1;

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         80         0        80     0.00%

================================Toggle Details================================

Toggle Coverage for instance /top/DUT/m1 --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                              MISO           0           0        0.00 
                                              MOSI           0           0        0.00 
                                              SS_n           0           0        0.00 
                                               clk           0           0        0.00 
                                           cs[2-0]           0           0        0.00 
                                              flag           0           0        0.00 
                                            i[3-0]           0           0        0.00 
                                            k[3-0]           0           0        0.00 
                                           ns[2-0]           0           0        0.00 
                                             rst_n           0           0        0.00 
                                      rx_data[9-0]           0           0        0.00 
                                          rx_valid           0           0        0.00 
                                      tx_data[0-7]           0           0        0.00 
                                          tx_valid           0           0        0.00 

Total Node Count     =         40 
Toggled Node Count   =          0 
Untoggled Node Count =         40 

Toggle Coverage      =       0.00% (0 of 80 bins)

=================================================================================
=== Instance: /top/DUT/m2
=== Design Unit: work.spi_ram
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         8         0         8     0.00%

================================Branch Details================================

Branch Coverage for instance /top/DUT/m2

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File project_ram.v
------------------------------------IF Branch------------------------------------
    17                                   ***0***     Count coming in to IF
    17              1                    ***0***     if(rst_n==0) begin
    24              1                    ***0***     else if(rx_valid==1) begin
                                         ***0***     All False Count
Branch totals: 0 hits of 3 branches = 0.00%

------------------------------------IF Branch------------------------------------
    25                                   ***0***     Count coming in to IF
    25              1                    ***0***      if(din[9:8]==2'b00) begin 
    29              1                    ***0***      else if(din[9:8]==2'b01) begin
    33              1                    ***0***      else if(din[9:8]==2'b10) begin
    37              1                    ***0***      else if(din[9:8]==2'b11) begin
                                         ***0***     All False Count
Branch totals: 0 hits of 5 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       4         0         4     0.00%

================================Condition Details================================

Condition Coverage for instance /top/DUT/m2 --

  File project_ram.v
----------------Focused Condition View-------------------
Line       25 Item    1  (din[9:8] == 0)
Condition totals: 0 of 1 input term covered = 0.00%

       Input Term   Covered  Reason for no coverage   Hint
      -----------  --------  -----------------------  --------------
  (din[9:8] == 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (din[9:8] == 0)_0     -                             
  Row   2:    ***0***  (din[9:8] == 0)_1     -                             

----------------Focused Condition View-------------------
Line       29 Item    1  (din[9:8] == 1)
Condition totals: 0 of 1 input term covered = 0.00%

       Input Term   Covered  Reason for no coverage   Hint
      -----------  --------  -----------------------  --------------
  (din[9:8] == 1)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (din[9:8] == 1)_0     -                             
  Row   2:    ***0***  (din[9:8] == 1)_1     -                             

----------------Focused Condition View-------------------
Line       33 Item    1  (din[9:8] == 2)
Condition totals: 0 of 1 input term covered = 0.00%

       Input Term   Covered  Reason for no coverage   Hint
      -----------  --------  -----------------------  --------------
  (din[9:8] == 2)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (din[9:8] == 2)_0     -                             
  Row   2:    ***0***  (din[9:8] == 2)_1     -                             

----------------Focused Condition View-------------------
Line       37 Item    1  (din[9:8] == 3)
Condition totals: 0 of 1 input term covered = 0.00%

       Input Term   Covered  Reason for no coverage   Hint
      -----------  --------  -----------------------  --------------
  (din[9:8] == 3)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (din[9:8] == 3)_0     -                             
  Row   2:    ***0***  (din[9:8] == 3)_1     -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      13         0        13     0.00%

================================Statement Details================================

Statement Coverage for instance /top/DUT/m2 --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File project_ram.v
    1                                                module spi_ram(din,rx_valid,tx_valid,dout,clk,rst_n);
    2                                                
    3                                                parameter MEM_DEPTH = 256,ADDR_SIZE=8;
    4                                                
    5                                                input [9:0] din;
    6                                                input rx_valid;
    7                                                input clk,rst_n;
    8                                                output reg tx_valid;
    9                                                output reg[7:0] dout;
    10                                               
    11                                               
    12                                               reg [ADDR_SIZE-1:0] WRITE_ADD,READ_ADD;
    13                                               reg[ADDR_SIZE-1:0] mem[MEM_DEPTH-1:0];
    14                                               
    15                                               
    16              1                    ***0***     always@(posedge clk or negedge rst_n) begin
    17                                               if(rst_n==0) begin
    18              1                    ***0***     dout<=0;
    19              1                    ***0***     tx_valid<=0;
    20              1                    ***0***     WRITE_ADD<=0;
    21              1                    ***0***     READ_ADD<=0;
    22                                               end
    23                                               
    24                                               else if(rx_valid==1) begin
    25                                                if(din[9:8]==2'b00) begin 
    26              1                    ***0***      WRITE_ADD<=din[7:0];
    27              1                    ***0***      tx_valid<=0;
    28                                                end
    29                                                else if(din[9:8]==2'b01) begin
    30              1                    ***0***           mem[WRITE_ADD]<=din[7:0];
    31              1                    ***0***           tx_valid<=0;
    32                                                     end 
    33                                                else if(din[9:8]==2'b10) begin
    34              1                    ***0***           READ_ADD<=din[7:0];
    35              1                    ***0***           tx_valid<=0;
    36                                                     end
    37                                                else if(din[9:8]==2'b11) begin
    38              1                    ***0***           dout<=mem[READ_ADD];
    39              1                    ***0***           tx_valid<=1;

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         76         0        76     0.00%

================================Toggle Details================================

Toggle Coverage for instance /top/DUT/m2 --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                     READ_ADD[7-0]           0           0        0.00 
                                    WRITE_ADD[7-0]           0           0        0.00 
                                               clk           0           0        0.00 
                                          din[0-9]           0           0        0.00 
                                         dout[7-0]           0           0        0.00 
                                             rst_n           0           0        0.00 
                                          rx_valid           0           0        0.00 
                                          tx_valid           0           0        0.00 

Total Node Count     =         38 
Toggled Node Count   =          0 
Untoggled Node Count =         38 

Toggle Coverage      =       0.00% (0 of 76 bins)

=================================================================================
=== Instance: /top/DUT/SPI_AS
=== Design Unit: work.SPI_assertions
=================================================================================

Assertion Coverage:
    Assertions                       1         0         1     0.00%
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/top/DUT/SPI_AS/a_not_reading_data
                     SPI_assertions.sv(18)              0          0
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         2         0         2     0.00%

================================Branch Details================================

Branch Coverage for instance /top/DUT/SPI_AS

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_assertions.sv
------------------------------------IF Branch------------------------------------
    5                                    ***0***     Count coming in to IF
    5               1                    ***0***         if(!asser.rst_n) begin
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%



Directive Coverage:
    Directives                       2         0         2     0.00%

DIRECTIVE COVERAGE:
--------------------------------------------------------------------------------------------
Name                                     Design Design   Lang File(Line)      Hits Status    
                                         Unit   UnitType                                     
--------------------------------------------------------------------------------------------
/top/DUT/SPI_AS/cover_assertion          SPI_assertions Verilog  SVA  SPI_assertions.sv(7)
                                                                                 0 ZERO      
/top/DUT/SPI_AS/c_not_reading_data       SPI_assertions Verilog  SVA  SPI_assertions.sv(19)
                                                                                 0 ZERO      
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                       1         0         1     0.00%

================================Statement Details================================

Statement Coverage for instance /top/DUT/SPI_AS --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_assertions.sv
    1                                                module SPI_assertions(SPI_IF asser);
    2                                                    
    3               1                    ***0***         always @(*) begin


=================================================================================
=== Instance: /top/DUT
=== Design Unit: work.spi_wrapper
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                       1         1         0   100.00%

================================Statement Details================================

Statement Coverage for instance /top/DUT --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File spi_wrapper.sv
    1                                                module spi_wrapper(SPI_IF spi_intf);
    2                                                
    3                                                
    4                                                wire [9:0] W1;
    5                                                wire W2,W3;
    6                                                wire [7:0] W4;
    7                                                
    8               1                          1     assign spi_intf.dut_state=m1.cs;

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         40         0        40     0.00%

================================Toggle Details================================

Toggle Coverage for instance /top/DUT --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                           W1[0-9]           0           0        0.00 
                                                W2           0           0        0.00 
                                                W3           0           0        0.00 
                                           W4[0-7]           0           0        0.00 

Total Node Count     =         20 
Toggled Node Count   =          0 
Untoggled Node Count =         20 

Toggle Coverage      =       0.00% (0 of 40 bins)

=================================================================================
=== Instance: /top/golden/RAM0
=== Design Unit: work.RAM_golden
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         8         0         8     0.00%

================================Branch Details================================

Branch Coverage for instance /top/golden/RAM0

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File RAM_Golden.v
------------------------------------IF Branch------------------------------------
    21                                   ***0***     Count coming in to IF
    21              1                    ***0***             if (!rst_n) begin
    27              1                    ***0***             else if (rx_valid) begin
                                         ***0***     All False Count
Branch totals: 0 hits of 3 branches = 0.00%

------------------------------------CASE Branch------------------------------------
    28                                   ***0***     Count coming in to CASE
    29              1                    ***0***                     WRITE_ADD: begin 
    33              1                    ***0***                     WRITE_DATA:begin
    37              1                    ***0***                     READ_ADD:begin
    41              1                    ***0***                     READ_DATA:begin
                                         ***0***     All False Count
Branch totals: 0 hits of 5 branches = 0.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      13         0        13     0.00%

================================Statement Details================================

Statement Coverage for instance /top/golden/RAM0 --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File RAM_Golden.v
    2                                                module RAM_golden(
    3                                                    input [9:0] din,
    4                                                    input clk,
    5                                                    input rst_n,
    6                                                    input rx_valid,
    7                                                    output reg[7:0] dout,
    8                                                    output reg tx_valid
    9                                                );
    10                                               
    11                                                   parameter MEM_DEPTH = 256;
    12                                                   parameter ADDR_SIZE = 8;
    13                                               
    14                                                   localparam WRITE_ADD=2'b00,WRITE_DATA=2'b01,READ_ADD=2'b10,READ_DATA=2'b11; 
    15                                               
    16                                                   reg [7:0] memory [MEM_DEPTH-1:0];
    17                                                   reg [ADDR_SIZE-1:0] wr_addr;
    18                                                   reg [ADDR_SIZE-1:0] rd_addr;
    19                                               
    20              1                    ***0***         always @(posedge clk or negedge rst_n) begin
    21                                                       if (!rst_n) begin
    22              1                    ***0***                 wr_addr <= 0;
    23              1                    ***0***                 rd_addr <= 0;
    24              1                    ***0***                 dout<=0;
    25              1                    ***0***                 tx_valid<=0;
    26                                                       end 
    27                                                       else if (rx_valid) begin
    28                                                           case (din[9:8])
    29                                                               WRITE_ADD: begin 
    30              1                    ***0***                         wr_addr <= din[7:0];
    31              1                    ***0***                         tx_valid<=0;             
    32                                                                   end
    33                                                               WRITE_DATA:begin
    34              1                    ***0***                          memory[wr_addr] <= din[7:0];
    35              1                    ***0***                          tx_valid<=0;
    36                                                                    end
    37                                                               READ_ADD:begin
    38              1                    ***0***                         rd_addr <= din[7:0];
    39              1                    ***0***                         tx_valid<=0;
    40                                                                   end
    41                                                               READ_DATA:begin
    42              1                    ***0***                     dout<=memory[rd_addr];
    43              1                    ***0***                     tx_valid<=1;

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         76         0        76     0.00%

================================Toggle Details================================

Toggle Coverage for instance /top/golden/RAM0 --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                               clk           0           0        0.00 
                                          din[0-9]           0           0        0.00 
                                         dout[7-0]           0           0        0.00 
                                      rd_addr[7-0]           0           0        0.00 
                                             rst_n           0           0        0.00 
                                          rx_valid           0           0        0.00 
                                          tx_valid           0           0        0.00 
                                      wr_addr[7-0]           0           0        0.00 

Total Node Count     =         38 
Toggled Node Count   =          0 
Untoggled Node Count =         38 

Toggle Coverage      =       0.00% (0 of 76 bins)

=================================================================================
=== Instance: /top/golden/spi_slave_g
=== Design Unit: work.spi_slave_golden
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        37         1        36     2.70%

================================Branch Details================================

Branch Coverage for instance /top/golden/spi_slave_g

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File spi_slave_golden.v
------------------------------------CASE Branch------------------------------------
    21                                         1     Count coming in to CASE
    22              1                    ***0***     	IDLE: begin
    30              1                    ***0***     	CHK_CMD: begin
    47              1                    ***0***     	WRITE: begin
    55              1                    ***0***     	READ_ADD: begin
    63              1                    ***0***     	READ_DATA: begin
    71              1                          1     	default:ns=IDLE;
Branch totals: 1 hit of 6 branches = 16.66%

------------------------------------IF Branch------------------------------------
    23                                   ***0***     Count coming in to IF
    23              1                    ***0***     		if(SS_n == 1) begin
    26              1                    ***0***     		else begin
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    31                                   ***0***     Count coming in to IF
    31              1                    ***0***     		if (SS_n == 1) begin
    34              1                    ***0***     		else if (SS_n == 0 && MOSI == 0) begin
    37              1                    ***0***     		else begin
Branch totals: 0 hits of 3 branches = 0.00%

------------------------------------IF Branch------------------------------------
    38                                   ***0***     Count coming in to IF
    38              1                    ***0***     			if (DONE_ADDR == 1) begin
    41              1                    ***0***     			else begin
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    48                                   ***0***     Count coming in to IF
    48              1                    ***0***     		if (SS_n == 1) begin
    51              1                    ***0***     		else begin
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    56                                   ***0***     Count coming in to IF
    56              1                    ***0***     		if (SS_n == 1) begin
    59              1                    ***0***     		else begin
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    64                                   ***0***     Count coming in to IF
    64              1                    ***0***     		if (SS_n == 1) begin
    67              1                    ***0***     		else begin
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    79                                   ***0***     Count coming in to IF
    79              1                    ***0***     	if(rst_n==0) begin
    86              1                    ***0***         else if (cs==IDLE) begin
    94              1                    ***0***     	else if(cs==WRITE) begin 
    110             1                    ***0***     	else if(cs==READ_ADD) begin
    125             1                    ***0***         else if(cs==READ_DATA) begin
                                         ***0***     All False Count
Branch totals: 0 hits of 6 branches = 0.00%

------------------------------------IF Branch------------------------------------
    95                                   ***0***     Count coming in to IF
    95              1                    ***0***     	  	 if(i==9) begin
    101             1                    ***0***            else begin
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    111                                  ***0***     Count coming in to IF
    111             1                    ***0***     	  	 if(i==9) begin
    118             1                    ***0***               else begin
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    126                                  ***0***     Count coming in to IF
    126             1                    ***0***         	   if(i==9) begin 
    131             1                    ***0***               else begin
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    137                                  ***0***     Count coming in to IF
    137             1                    ***0***             if(tx_valid==1) begin
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    140                                  ***0***     Count coming in to IF
    140             1                    ***0***     		   if(j==7) begin
    144             1                    ***0***                else begin
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    155                                  ***0***     Count coming in to IF
    155             1                    ***0***     	if(~rst_n)
    157             1                    ***0***     	else
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                      10         0        10     0.00%

================================Condition Details================================

Condition Coverage for instance /top/golden/spi_slave_g --

  File spi_slave_golden.v
----------------Focused Condition View-------------------
Line       34 Item    1  (SS_n ~| MOSI)
Condition totals: 0 of 2 input terms covered = 0.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
        SS_n         N  No hits                  Hit '_0' and '_1'
        MOSI         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  SS_n_0                ~MOSI                         
  Row   2:    ***0***  SS_n_1                ~MOSI                         
  Row   3:    ***0***  MOSI_0                ~SS_n                         
  Row   4:    ***0***  MOSI_1                ~SS_n                         

----------------Focused Condition View-------------------
Line       86 Item    1  (cs == 0)
Condition totals: 0 of 1 input term covered = 0.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
   (cs == 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (cs == 0)_0           -                             
  Row   2:    ***0***  (cs == 0)_1           -                             

----------------Focused Condition View-------------------
Line       94 Item    1  (cs == 2)
Condition totals: 0 of 1 input term covered = 0.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
   (cs == 2)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (cs == 2)_0           -                             
  Row   2:    ***0***  (cs == 2)_1           -                             

----------------Focused Condition View-------------------
Line       95 Item    1  (i == 9)
Condition totals: 0 of 1 input term covered = 0.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
    (i == 9)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (i == 9)_0            -                             
  Row   2:    ***0***  (i == 9)_1            -                             

----------------Focused Condition View-------------------
Line       110 Item    1  (cs == 4)
Condition totals: 0 of 1 input term covered = 0.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
   (cs == 4)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (cs == 4)_0           -                             
  Row   2:    ***0***  (cs == 4)_1           -                             

----------------Focused Condition View-------------------
Line       111 Item    1  (i == 9)
Condition totals: 0 of 1 input term covered = 0.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
    (i == 9)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (i == 9)_0            -                             
  Row   2:    ***0***  (i == 9)_1            -                             

----------------Focused Condition View-------------------
Line       125 Item    1  (cs == 3)
Condition totals: 0 of 1 input term covered = 0.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
   (cs == 3)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (cs == 3)_0           -                             
  Row   2:    ***0***  (cs == 3)_1           -                             

----------------Focused Condition View-------------------
Line       126 Item    1  (i == 9)
Condition totals: 0 of 1 input term covered = 0.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
    (i == 9)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (i == 9)_0            -                             
  Row   2:    ***0***  (i == 9)_1            -                             

----------------Focused Condition View-------------------
Line       140 Item    1  (j == 7)
Condition totals: 0 of 1 input term covered = 0.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
    (j == 7)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (j == 7)_0            -                             
  Row   2:    ***0***  (j == 7)_1            -                             


FSM Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    FSM States                       5         0         5     0.00%
    FSM Transitions                  8         0         8     0.00%

================================FSM Details================================

FSM Coverage for instance /top/golden/spi_slave_g --

FSM_ID: cs
    Current State Object : cs
    ----------------------
    State Value MapInfo :
    ---------------------
Line          State Name               Value
----          ----------               -----
  22                IDLE                   0
  30             CHK_CMD                   1
  55            READ_ADD                   4
  63           READ_DATA                   3
  47               WRITE                   2
    Uncovered States :
    ------------------
                   State
                   -----
                    IDLE
                 CHK_CMD
                READ_ADD
               READ_DATA
                   WRITE
    Uncovered Transitions :
    -----------------------
Line            Trans_ID          Transition          
----            --------          ----------          
  27                   0          IDLE -> CHK_CMD     
  42                   1          CHK_CMD -> READ_ADD 
  39                   2          CHK_CMD -> READ_DATA
  35                   3          CHK_CMD -> WRITE    
  32                   4          CHK_CMD -> IDLE     
  57                   5          READ_ADD -> IDLE    
  65                   6          READ_DATA -> IDLE   
  49                   7          WRITE -> IDLE       


    Summary                       Bins      Hits    Misses  Coverage
    -------                       ----      ----    ------  --------
        FSM States                   5         0         5     0.00%
        FSM Transitions              8         0         8     0.00%
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      52         3        49     5.76%

================================Statement Details================================

Statement Coverage for instance /top/golden/spi_slave_g --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File spi_slave_golden.v
    1                                                module  spi_slave_golden(MOSI,MISO,SS_n,clk,rst_n,rx_data,rx_valid,tx_data,tx_valid);
    2                                                parameter IDLE=3'b000;
    3                                                parameter CHK_CMD=3'b001;
    4                                                parameter WRITE=3'b010;
    5                                                parameter READ_ADD=3'b100;
    6                                                parameter READ_DATA=3'b011;
    7                                                
    8                                                
    9                                                input  MOSI,SS_n,tx_valid,clk,rst_n;
    10                                               input  [7:0] tx_data;
    11                                               output reg [9:0] rx_data;
    12                                               output reg MISO,rx_valid;
    13                                               
    14                                               reg [2:0] cs,ns;
    15              1                          1     reg DONE_ADDR=0;
    16                                               reg [3:0]i;
    17                                               reg [2:0]j;
    18                                               
    19                                               
    20              1                          1     always @(*) begin
    21                                               	case(cs)
    22                                               	IDLE: begin
    23                                               		if(SS_n == 1) begin
    24              1                    ***0***     			ns = IDLE;
    25                                               		end
    26                                               		else begin
    27              1                    ***0***     			ns = CHK_CMD;
    28                                               		end
    29                                               	end
    30                                               	CHK_CMD: begin
    31                                               		if (SS_n == 1) begin
    32              1                    ***0***     			ns = IDLE;
    33                                               		end
    34                                               		else if (SS_n == 0 && MOSI == 0) begin
    35              1                    ***0***     			ns = WRITE;
    36                                               		end
    37                                               		else begin
    38                                               			if (DONE_ADDR == 1) begin
    39              1                    ***0***     				ns = READ_DATA;
    40                                               			end
    41                                               			else begin
    42              1                    ***0***     				ns = READ_ADD;
    43                                               			end
    44                                               		end
    45                                               
    46                                               	end
    47                                               	WRITE: begin
    48                                               		if (SS_n == 1) begin
    49              1                    ***0***     			ns = IDLE;
    50                                               		end
    51                                               		else begin
    52              1                    ***0***     			ns = WRITE;
    53                                               		end
    54                                               	end
    55                                               	READ_ADD: begin
    56                                               		if (SS_n == 1) begin
    57              1                    ***0***     			ns = IDLE;
    58                                               		end
    59                                               		else begin
    60              1                    ***0***     			ns = READ_ADD;
    61                                               		end
    62                                               	end
    63                                               	READ_DATA: begin
    64                                               		if (SS_n == 1) begin
    65              1                    ***0***     			ns = IDLE;
    66                                               		end
    67                                               		else begin
    68              1                    ***0***     			ns = READ_DATA;
    69                                               		end
    70                                               	end
    71              1                          1     	default:ns=IDLE;
    72                                               	endcase
    73                                               end
    74                                               
    75                                               //**************************************************************************
    76                                               
    77              1                    ***0***     always@(posedge clk or negedge rst_n) begin
    78                                                   	
    79                                               	if(rst_n==0) begin
    80              1                    ***0***         		MISO<=0;
    81              1                    ***0***     	        DONE_ADDR<=0;
    82              1                    ***0***     			rx_valid<=0;
    83              1                    ***0***     			rx_data<=0;
    84                                                   	end
    85                                               		
    86                                                   else if (cs==IDLE) begin
    87              1                    ***0***         	   i <=4'b0;
    88              1                    ***0***         	   j <=4'b0;
    89              1                    ***0***     	       rx_valid <=0;
    90              1                    ***0***     	       MISO <= 0;
    91              1                    ***0***     		   rx_data<=0;
    92                                                   end
    93                                               
    94                                               	else if(cs==WRITE) begin 
    95                                               	  	 if(i==9) begin
    96              1                    ***0***              rx_valid<=1;
    97              1                    ***0***     		 rx_data[9-i] <= MOSI;
    98              1                    ***0***     		 i<=0;
    99                                               		 end
    100                                              
    101                                                     else begin
    102             1                    ***0***     	      rx_data[9-i] <= MOSI;
    103             1                    ***0***     	      i<=i+1;
    104             1                    ***0***     		  rx_valid<=0;
    105                                              	    end
    106                                              
    107                                              
    108                                              	end
    109                                              
    110                                              	else if(cs==READ_ADD) begin
    111                                              	  	 if(i==9) begin
    112             1                    ***0***              rx_valid<=1;
    113             1                    ***0***     		 rx_data[9-i] <= MOSI;
    114             1                    ***0***     		 i<=0;
    115             1                    ***0***     		 DONE_ADDR<=1;
    116                                              		 end
    117                                              
    118                                                        else begin
    119             1                    ***0***     	          rx_data[9-i] <= MOSI;
    120             1                    ***0***     	          i<=i+1;
    121             1                    ***0***     			  rx_valid<=0;
    122                                              	         end
    123                                                  end
    124                                              
    125                                                  else if(cs==READ_DATA) begin
    126                                                  	   if(i==9) begin 
    127             1                    ***0***                 rx_valid<=1;
    128             1                    ***0***     		    rx_data[9-i] <= MOSI;
    129             1                    ***0***     			i<=0;
    130                                              		   end
    131                                                        else begin
    132             1                    ***0***     	          rx_data[9-i] <= MOSI;
    133             1                    ***0***     	          i<=i+1;
    134             1                    ***0***     			  rx_valid<=0;
    135                                              	        end
    136                                              
    137                                                      if(tx_valid==1) begin
    138             1                    ***0***     		   rx_valid<=0;
    139                                              	       
    140                                              		   if(j==7) begin
    141             1                    ***0***     		   DONE_ADDR<=0;
    142             1                    ***0***     		   MISO <= tx_data[7-j];
    143                                              		   end
    144                                                         else begin
    145             1                    ***0***     		   MISO <= tx_data[7-j];
    146             1                    ***0***     	       j<=j+1;
    147                                              	       end
    148                                                      end
    149                                              		 
    150                                              end
    151                                              end
    152                                              //***************************************************************************
    153                                              
    154             1                    ***0***     always@(posedge clk or negedge rst_n)begin
    155                                              	if(~rst_n)
    156             1                    ***0***     		cs<=IDLE;
    157                                              	else
    158             1                    ***0***     		cs<=ns;

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         78         0        78     0.00%

================================Toggle Details================================

Toggle Coverage for instance /top/golden/spi_slave_g --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                         DONE_ADDR           0           0        0.00 
                                              MISO           0           0        0.00 
                                              MOSI           0           0        0.00 
                                              SS_n           0           0        0.00 
                                               clk           0           0        0.00 
                                           cs[2-0]           0           0        0.00 
                                            i[3-0]           0           0        0.00 
                                            j[2-0]           0           0        0.00 
                                           ns[2-0]           0           0        0.00 
                                             rst_n           0           0        0.00 
                                      rx_data[9-0]           0           0        0.00 
                                          rx_valid           0           0        0.00 
                                      tx_data[0-7]           0           0        0.00 
                                          tx_valid           0           0        0.00 

Total Node Count     =         39 
Toggled Node Count   =          0 
Untoggled Node Count =         39 

Toggle Coverage      =       0.00% (0 of 78 bins)

=================================================================================
=== Instance: /top/golden
=== Design Unit: work.SPI_Wrapper_Golden
=================================================================================
Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         50         0        50     0.00%

================================Toggle Details================================

Toggle Coverage for instance /top/golden --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                              MISO           0           0        0.00 
                                              MOSI           0           0        0.00 
                                              SS_n           0           0        0.00 
                                               clk           0           0        0.00 
                                             rst_n           0           0        0.00 
                                      rx_data[0-9]           0           0        0.00 
                                          rx_valid           0           0        0.00 
                                      tx_data[0-7]           0           0        0.00 
                                          tx_valid           0           0        0.00 

Total Node Count     =         25 
Toggled Node Count   =          0 
Untoggled Node Count =         25 

Toggle Coverage      =       0.00% (0 of 50 bins)

=================================================================================
=== Instance: /seq_item
=== Design Unit: work.seq_item
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         0        10     0.00%

================================Branch Details================================

Branch Coverage for instance /seq_item

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File seq_item.sv
------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               1                    ***0***     	`uvm_object_utils(spi_seq_item)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               2                    ***0***     	`uvm_object_utils(spi_seq_item)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               3                    ***0***     	`uvm_object_utils(spi_seq_item)
    6               4                    ***0***     	`uvm_object_utils(spi_seq_item)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               5                    ***0***     	`uvm_object_utils(spi_seq_item)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               6                    ***0***     	`uvm_object_utils(spi_seq_item)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /seq_item --

  File seq_item.sv
----------------Focused Condition View-------------------
Line       6 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       6 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:    ***0***  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      13         0        13     0.00%

================================Statement Details================================

Statement Coverage for instance /seq_item --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File seq_item.sv
    1                                                package seq_item;
    2                                                import uvm_pkg::*;
    3                                                `include "uvm_macros.svh"
    4                                                
    5                                                class spi_seq_item extends  uvm_sequence_item;
    6               1                    ***0***     	`uvm_object_utils(spi_seq_item)
    6               2                    ***0***     
    6               3                    ***0***     
    6               4                    ***0***     
    6               5                    ***0***     
    6               6                    ***0***     
    6               7                    ***0***     
    6               8                    ***0***     
    6               9                    ***0***     
    6              10                    ***0***     
    7                                                    
    8                                                    rand logic rst_n;
    9                                                    logic [2:0] dut_state;
    10                                                   rand static bit [10:0] data_in;
    11                                                   randc static bit [7:0] payload;
    12                                                   rand bit [2:0] control;
    13                                                   static bit past_control;
    14                                                   logic MISO,MISO_golden;
    15                                                   logic SS_n,MOSI;
    16                                               
    17                                               	function new(string name="spi_seq_item");
    18              1                    ***0***     	super.new(name);
    19                                                   endfunction : new
    20                                               
    21                                               
    22                                                   function string convert2string_stimulus();
    23              1                    ***0***         	return $sformatf("MOSI=0b%0b ,rst_n=0b%0b ,SS_n=0b%0b ,dut_state=0b%0b",MOSI, rst_n, SS_n, dut_state);
    24                                                   	
    25                                                   endfunction
    26                                               
    27                                               
    28                                                   constraint c_rst_n{ rst_n dist{0:=3,1:=97}; };
    29                                               
    30                                                   constraint c_data_in{data_in=={control,payload};  }
    31                                               
    32                                                   constraint c_data_write{
    33                                                       
    34                                                       control[2]==0;
    35                                                       control[1]==0;
    36                                               
    37                                                   }
    38                                                       
    39                                                   constraint c_data_read{
    40                                               
    41                                                       control[2]==1;
    42                                                       control[1]==1;
    43                                               
    44                                                   }
    45                                               
    46                                                   constraint c_r_w_rst{
    47                                               
    48                                                       if(rst_n){
    49                                                           
    50                                                           if(past_control==0){
    51                                                               control[0]==1;
    52                                                           }
    53                                                           if(past_control==1){
    54                                                               control[0]==0;
    55                                                           }
    56                                                       }
    57                                               
    58                                                       else if(!rst_n){
    59                                                           control[0]==1;
    60                                                       }
    61                                               
    62                                               
    63                                                   }
    64                                               
    65                                                   function void post_randomize;
    66                                                           
    67              1                    ***0***         past_control=control[0];


=================================================================================
=== Instance: /seq
=== Design Unit: work.seq
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        20         0        20     0.00%

================================Branch Details================================

Branch Coverage for instance /seq

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File sequence.sv
------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               1                    ***0***     	`uvm_object_utils(spi_sequence_write)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               2                    ***0***     	`uvm_object_utils(spi_sequence_write)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               3                    ***0***     	`uvm_object_utils(spi_sequence_write)
    7               4                    ***0***     	`uvm_object_utils(spi_sequence_write)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               5                    ***0***     	`uvm_object_utils(spi_sequence_write)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               6                    ***0***     	`uvm_object_utils(spi_sequence_write)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    26                                   ***0***     Count coming in to IF
    26              1                    ***0***     	`uvm_object_utils(spi_sequence_read)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    26                                   ***0***     Count coming in to IF
    26              2                    ***0***     	`uvm_object_utils(spi_sequence_read)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    26                                   ***0***     Count coming in to IF
    26              3                    ***0***     	`uvm_object_utils(spi_sequence_read)
    26              4                    ***0***     	`uvm_object_utils(spi_sequence_read)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    26                                   ***0***     Count coming in to IF
    26              5                    ***0***     	`uvm_object_utils(spi_sequence_read)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    26                                   ***0***     Count coming in to IF
    26              6                    ***0***     	`uvm_object_utils(spi_sequence_read)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       4         0         4     0.00%

================================Condition Details================================

Condition Coverage for instance /seq --

  File sequence.sv
----------------Focused Condition View-------------------
Line       7 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       7 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:    ***0***  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             

----------------Focused Condition View-------------------
Line       26 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       26 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:    ***0***  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      32         2        30     6.25%

================================Statement Details================================

Statement Coverage for instance /seq --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File sequence.sv
    1                                                package seq;
    2                                                import seq_item::*;
    3                                                import uvm_pkg::*;
    4                                                `include "uvm_macros.svh"
    5                                                
    6                                                class spi_sequence_write extends  uvm_sequence #(spi_seq_item);
    7               1                    ***0***     	`uvm_object_utils(spi_sequence_write)
    7               2                    ***0***     
    7               3                    ***0***     
    7               4                    ***0***     
    7               5                    ***0***     
    7               6                    ***0***     
    7               7                    ***0***     
    7               8                    ***0***     
    7               9                    ***0***     
    7              10                    ***0***     
    8                                                     
    9                                                    spi_seq_item seq_item1;
    10                                               	function new(string name="spi_sequence_write");
    11              1                          1     	super.new(name);
    12                                                   endfunction : new
    13                                               
    14                                               task body();
    15              1                    ***0***     	repeat(3000)begin
    16              1                    ***0***     		seq_item1=spi_seq_item::type_id::create("seq_item1");
    17              1                    ***0***     		seq_item1.c_data_read.constraint_mode(0);
    18              1                    ***0***     		start_item(seq_item1);
    19                                               		assert(seq_item1.randomize());
    20              1                    ***0***             finish_item(seq_item1);
    21                                               	end	
    22                                               endtask : body	
    23                                               endclass 
    24                                               
    25                                               class spi_sequence_read extends  uvm_sequence #(spi_seq_item);
    26              1                    ***0***     	`uvm_object_utils(spi_sequence_read)
    26              2                    ***0***     
    26              3                    ***0***     
    26              4                    ***0***     
    26              5                    ***0***     
    26              6                    ***0***     
    26              7                    ***0***     
    26              8                    ***0***     
    26              9                    ***0***     
    26             10                    ***0***     
    27                                                    
    28                                                   spi_seq_item seq_item;
    29                                               	function new(string name="spi_sequence_read");
    30              1                          1     	super.new(name);
    31                                                   endfunction : new
    32                                               
    33                                               task body();
    34              1                    ***0***     	repeat(3000)begin
    35              1                    ***0***     		seq_item=spi_seq_item::type_id::create("seq_item");
    36              1                    ***0***     		seq_item.c_data_write.constraint_mode(0);
    37              1                    ***0***     		start_item(seq_item);
    38                                               		assert(seq_item.randomize());
    39              1                    ***0***             finish_item(seq_item);


=================================================================================
=== Instance: /RAM_seq_item_pkg
=== Design Unit: work.RAM_seq_item_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         0        10     0.00%

================================Branch Details================================

Branch Coverage for instance /RAM_seq_item_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File RAM_seq_item.sv
------------------------------------IF Branch------------------------------------
    8                                    ***0***     Count coming in to IF
    8               1                    ***0***         `uvm_object_utils(RAM_seq_item);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    8                                    ***0***     Count coming in to IF
    8               2                    ***0***         `uvm_object_utils(RAM_seq_item);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    8                                    ***0***     Count coming in to IF
    8               3                    ***0***         `uvm_object_utils(RAM_seq_item);
    8               4                    ***0***         `uvm_object_utils(RAM_seq_item);
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    8                                    ***0***     Count coming in to IF
    8               5                    ***0***         `uvm_object_utils(RAM_seq_item);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    8                                    ***0***     Count coming in to IF
    8               6                    ***0***         `uvm_object_utils(RAM_seq_item);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /RAM_seq_item_pkg --

  File RAM_seq_item.sv
----------------Focused Condition View-------------------
Line       8 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       8 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:    ***0***  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      11         0        11     0.00%

================================Statement Details================================

Statement Coverage for instance /RAM_seq_item_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File RAM_seq_item.sv
    1                                                package RAM_seq_item_pkg;
    2                                                
    3                                                   import uvm_pkg::*;
    4                                                   `include "uvm_macros.svh"
    5                                                
    6                                                   class RAM_seq_item  extends uvm_sequence_item ;
    7                                                    
    8               1                    ***0***         `uvm_object_utils(RAM_seq_item);
    8               2                    ***0***     
    8               3                    ***0***     
    8               4                    ***0***     
    8               5                    ***0***     
    8               6                    ***0***     
    8               7                    ***0***     
    8               8                    ***0***     
    8               9                    ***0***     
    8              10                    ***0***     
    9                                                
    10                                                       randc logic [9:0] din;
    11                                                       rand logic rx_valid,rst_n;
    12                                                       logic [7:0] dout,dout_golden;
    13                                                       logic tx_valid,tx_valid_golden;
    14                                               
    15                                               
    16                                                   function new(string name = "RAM_seq_item");
    17                                                       
    18              1                    ***0***              super.new(name);


=================================================================================
=== Instance: /RAM_coverage_pkg
=== Design Unit: work.RAM_coverage_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         2         0         2     0.00%

================================Branch Details================================

Branch Coverage for instance /RAM_coverage_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File RAM_coverage.sv
------------------------------------IF Branch------------------------------------
    59                                   ***0***     Count coming in to IF
    59              1                    ***0***     	        `uvm_info("run_phase","ram coverage Started",UVM_LOW);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      14         0        14     0.00%

================================Statement Details================================

Statement Coverage for instance /RAM_coverage_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File RAM_coverage.sv
    1                                                package RAM_coverage_pkg;
    2                                                
    3                                                    import uvm_pkg::*;
    4                                                    import RAM_seq_item_pkg::*;
    5                                                    import seq::*;
    6                                                    `include "uvm_macros.svh"
    7                                                    
    8                                                    class RAM_coverage extends uvm_component;
    9               1                    ***0***               `uvm_component_utils(RAM_coverage)  
    9               2                    ***0***     
    9               3                    ***0***     
    10                                                       
    11                                                       uvm_analysis_export #(RAM_seq_item) cov_export;
    12                                                       uvm_tlm_analysis_fifo #(RAM_seq_item) cov_fifo;
    13                                                       RAM_seq_item seq_item_cov;
    14                                                       
    15                                                       covergroup cvr_grp_ram;
    16                                               
    17                                                       c_rx_valid: coverpoint seq_item_cov.rx_valid;
    18                                                       c_rst_n: coverpoint seq_item_cov.rst_n;
    19                                                       
    20                                                       c_din_write: coverpoint seq_item_cov.din iff(seq_item_cov.rst_n && seq_item_cov.rx_valid){
    21                                                           option.auto_bin_max=8'b1111_1111;
    22                                                            bins write_addresses[]={[10'b00_0000_0000:10'b00_1111_1111]};
    23                                               
    24                                                       }
    25                                               
    26                                                       c_din_read: coverpoint seq_item_cov.din iff(seq_item_cov.rst_n && seq_item_cov.rx_valid){
    27                                                           option.auto_bin_max=8'b1111_1111;
    28                                                            bins read_addresses[]={[10'b10_0000_0000:10'b10_1111_1111]};
    29                                               
    30                                                       }
    31                                               
    32                                                       endgroup 
    33                                                       
    34                                               
    35                                                       function  new(string name="RAM_coverage",uvm_component parent=null);
    36                                               		
    37              1                    ***0***                       super.new(name,parent);
    38              1                    ***0***                       cvr_grp_ram=new();
    39                                               
    40                                                       endfunction 
    41                                                   
    42                                                       function void build_phase(uvm_phase phase);
    43                                                           
    44              1                    ***0***                     super.build_phase(phase);
    45              1                    ***0***                     cov_fifo=new("cov_fifo",this);
    46              1                    ***0***     	            cov_export=new("cov_export",this);
    47                                               
    48                                                       endfunction
    49                                               
    50                                                       function void connect_phase(uvm_phase phase);
    51                                                           
    52              1                    ***0***                     cov_export.connect(cov_fifo.analysis_export);
    53                                               
    54                                                       endfunction
    55                                                       
    56                                                       task run_phase(uvm_phase phase);
    57                                               	
    58              1                    ***0***                 super.run_phase(phase);
    59              1                    ***0***     	        `uvm_info("run_phase","ram coverage Started",UVM_LOW);
    60              1                    ***0***                 forever begin
    61              1                    ***0***     		            cov_fifo.get(seq_item_cov);
    62              1                    ***0***     		            cvr_grp_ram.sample();


=================================================================================
=== Instance: /RAM_scoreboard_pkg
=== Design Unit: work.RAM_scoreboard_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         2         0         2     0.00%

================================Branch Details================================

Branch Coverage for instance /RAM_scoreboard_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File RAM_scoreboard.sv
------------------------------------IF Branch------------------------------------
    47                                   ***0***     Count coming in to IF
    47              1                    ***0***                     if((seq_item_sb.dout_golden)!==(seq_item_sb.dout) || (seq_item_sb.tx_valid_golden) !== (seq_item_sb.tx_valid)) begin
    54              1                    ***0***                     else begin
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /RAM_scoreboard_pkg --

  File RAM_scoreboard.sv
----------------Focused Condition View-------------------
Line       47 Item    1  ((this.seq_item_sb.dout_golden !== this.seq_item_sb.dout) || (this.seq_item_sb.tx_valid_golden !== this.seq_item_sb.tx_valid))
Condition totals: 0 of 2 input terms covered = 0.00%

                                                        Input Term   Covered  Reason for no coverage   Hint
                                                       -----------  --------  -----------------------  --------------
          (this.seq_item_sb.dout_golden !== this.seq_item_sb.dout)         N  No hits                  Hit '_0' and '_1'
  (this.seq_item_sb.tx_valid_golden !== this.seq_item_sb.tx_valid)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                                                          Non-masking condition(s)      
 ---------  ---------  --------------------                                                -------------------------     
  Row   1:    ***0***  (this.seq_item_sb.dout_golden !== this.seq_item_sb.dout)_0          ~(this.seq_item_sb.tx_valid_golden !== this.seq_item_sb.tx_valid)
  Row   2:    ***0***  (this.seq_item_sb.dout_golden !== this.seq_item_sb.dout)_1          -                             
  Row   3:    ***0***  (this.seq_item_sb.tx_valid_golden !== this.seq_item_sb.tx_valid)_0  ~(this.seq_item_sb.dout_golden !== this.seq_item_sb.dout)
  Row   4:    ***0***  (this.seq_item_sb.tx_valid_golden !== this.seq_item_sb.tx_valid)_1  ~(this.seq_item_sb.dout_golden !== this.seq_item_sb.dout)


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      18         0        18     0.00%

================================Statement Details================================

Statement Coverage for instance /RAM_scoreboard_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File RAM_scoreboard.sv
    1                                                package RAM_scoreboard_pkg;
    2                                                
    3                                                    import uvm_pkg::*;
    4                                                    import RAM_seq_item_pkg::*;
    5                                                    `include "uvm_macros.svh"
    6                                                
    7                                                    class RAM_scoreboard extends uvm_scoreboard;
    8               1                    ***0***             `uvm_component_utils(RAM_scoreboard)
    8               2                    ***0***     
    8               3                    ***0***     
    9                                                        
    10                                                       uvm_analysis_export #(RAM_seq_item) sb_export;
    11                                                       uvm_tlm_analysis_fifo #(RAM_seq_item) sb_fifo;
    12                                                       RAM_seq_item seq_item_sb;
    13                                                       
    14                                               
    15              1                    ***0***             int correct_counter=0,error_counter=0;
    15              2                    ***0***     
    16                                               
    17                                                       function new(string name="RAM_scoreboard", uvm_component parent = null);
    18                                               
    19              1                    ***0***                 super.new(name,parent);
    20                                                       
    21                                                       endfunction 
    22                                               
    23                                                       function void build_phase(uvm_phase phase);
    24                                               
    25              1                    ***0***                 super.build_phase(phase);
    26              1                    ***0***                 seq_item_sb=RAM_seq_item::type_id::create("seq_item_sb");
    27              1                    ***0***                 sb_export=new("sb_export",this);
    28              1                    ***0***                 sb_fifo=new("sb_fifo",this);
    29                                               
    30                                                       endfunction
    31                                               
    32                                                       function void connect_phase(uvm_phase phase);
    33              1                    ***0***                     super.connect_phase(phase);
    34              1                    ***0***                     sb_export.connect(sb_fifo.analysis_export);
    35                                               
    36                                                       endfunction
    37                                               
    38                                               
    39                                                       task run_phase(uvm_phase phase);
    40                                                           
    41              1                    ***0***                 super.run_phase(phase);
    42                                               
    43              1                    ***0***                 forever begin
    44                                                            
    45              1                    ***0***                  sb_fifo.get(seq_item_sb);
    46                                               
    47                                                               if((seq_item_sb.dout_golden)!==(seq_item_sb.dout) || (seq_item_sb.tx_valid_golden) !== (seq_item_sb.tx_valid)) begin
    48                                                                               
    49              1                    ***0***                         $display("At time %0t : din= %0b , rx valid = %0b , dout dut = %0b and dout golden = %0b , tx dut = %0b and tx golden = %0b ",
    50                                                                   $time,seq_item_sb.din,seq_item_sb.rx_valid,seq_item_sb.dout,seq_item_sb.dout_golden,seq_item_sb.tx_valid_golden,seq_item_sb.tx_valid_golden);
    51              1                    ***0***                         error_counter++;
    52                                                               end 
    53                                               
    54                                                               else begin
    55              1                    ***0***                         correct_counter++;


=================================================================================
=== Instance: /myconfig
=== Design Unit: work.myconfig
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         0        10     0.00%

================================Branch Details================================

Branch Coverage for instance /myconfig

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File config.sv
------------------------------------IF Branch------------------------------------
    8                                    ***0***     Count coming in to IF
    8               1                    ***0***     	`uvm_object_utils(spi_config)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    8                                    ***0***     Count coming in to IF
    8               2                    ***0***     	`uvm_object_utils(spi_config)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    8                                    ***0***     Count coming in to IF
    8               3                    ***0***     	`uvm_object_utils(spi_config)
    8               4                    ***0***     	`uvm_object_utils(spi_config)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    8                                    ***0***     Count coming in to IF
    8               5                    ***0***     	`uvm_object_utils(spi_config)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    8                                    ***0***     Count coming in to IF
    8               6                    ***0***     	`uvm_object_utils(spi_config)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /myconfig --

  File config.sv
----------------Focused Condition View-------------------
Line       8 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       8 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:    ***0***  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      11         1        10     9.09%

================================Statement Details================================

Statement Coverage for instance /myconfig --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File config.sv
    1                                                package myconfig;
    2                                                import uvm_pkg::*;
    3                                                `include "uvm_macros.svh"
    4                                                
    5                                                typedef enum bit {UVM_AGENT_PASSIVE,UVM_AGENT_ACTIVE} AGENT_STATE;
    6                                                
    7                                                class spi_config extends  uvm_object;
    8               1                    ***0***     	`uvm_object_utils(spi_config)
    8               2                    ***0***     
    8               3                    ***0***     
    8               4                    ***0***     
    8               5                    ***0***     
    8               6                    ***0***     
    8               7                    ***0***     
    8               8                    ***0***     
    8               9                    ***0***     
    8              10                    ***0***     
    9                                                
    10                                               	function  new(string name="spi_config");
    11              1                          2     		super.new(name);


=================================================================================
=== Instance: /RAM_monitor_pkg
=== Design Unit: work.RAM_monitor_pkg
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      17         0        17     0.00%

================================Statement Details================================

Statement Coverage for instance /RAM_monitor_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File RAM_monitor.sv
    1                                                package RAM_monitor_pkg;
    2                                                    
    3                                                    import uvm_pkg::*;
    4                                                    import RAM_seq_item_pkg::*;
    5                                                    `include "uvm_macros.svh"
    6                                                
    7                                                    class RAM_monitor extends uvm_monitor;
    8               1                    ***0***             `uvm_component_utils(RAM_monitor)
    8               2                    ***0***     
    8               3                    ***0***     
    9                                                
    10                                                       virtual RAM_intf RAM_monitor_vif;
    11                                                       virtual RAM_intf RAM_monitor_golden_vif;
    12                                               
    13                                                       RAM_seq_item mon_seq_item;
    14                                                       uvm_analysis_port #(RAM_seq_item) mon_port;
    15                                               
    16                                                       function new(string name="RAM_monitor", uvm_component parent = null);
    17                                               
    18              1                    ***0***                     super.new(name,parent);
    19                                               
    20                                                       endfunction 
    21                                               
    22                                                       function void build_phase(uvm_phase phase);
    23                                                           
    24              1                    ***0***                     super.build_phase(phase);
    25              1                    ***0***                     mon_port=new("mon_port",this);
    26                                               
    27                                                       endfunction
    28                                               
    29                                                       task run_phase(uvm_phase phase);
    30                                                           
    31              1                    ***0***                     forever begin
    32                                                                   
    33              1                    ***0***                         mon_seq_item=RAM_seq_item::type_id::create("mon_seq_item");
    34              1                    ***0***                         @(negedge RAM_monitor_vif.clk);
    35                                                                   
    36              1                    ***0***                         mon_seq_item.din=RAM_monitor_vif.din;
    37              1                    ***0***                         mon_seq_item.rst_n=RAM_monitor_vif.rst_n;
    38              1                    ***0***                         mon_seq_item.rx_valid=RAM_monitor_vif.rx_valid;
    39              1                    ***0***                         mon_seq_item.dout=RAM_monitor_vif.dout;
    40              1                    ***0***                         mon_seq_item.tx_valid=RAM_monitor_vif.tx_valid;
    41                                               
    42              1                    ***0***                         mon_seq_item.dout_golden=RAM_monitor_golden_vif.dout;
    43              1                    ***0***                         mon_seq_item.tx_valid_golden=RAM_monitor_golden_vif.tx_valid;
    44                                               
    45              1                    ***0***                         mon_port.write(mon_seq_item);


=================================================================================
=== Instance: /RAM_driver_pkg
=== Design Unit: work.RAM_driver_pkg
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      16         0        16     0.00%

================================Statement Details================================

Statement Coverage for instance /RAM_driver_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File RAM_driver.sv
    1                                                package RAM_driver_pkg;
    2                                                    
    3                                                   import uvm_pkg::*;
    4                                                   import RAM_seq_item_pkg::*;
    5                                                   `include "uvm_macros.svh"
    6                                                
    7                                                   class RAM_driver extends uvm_driver#(RAM_seq_item);
    8                                                    
    9               1                    ***0***         `uvm_component_utils(RAM_driver)
    9               2                    ***0***     
    9               3                    ***0***     
    10                                               
    11                                                   RAM_seq_item stim_seq_item;
    12                                                   virtual RAM_intf RAM_driver_vif;
    13                                                  virtual RAM_intf RAM_driver_golden_vif;
    14                                               
    15                                                   function new(string name="RAM_driver", uvm_component parent = null);
    16              1                    ***0***             super.new(name,parent);
    17                                                   endfunction  
    18                                               
    19                                                  task run_phase(uvm_phase phase);
    20              1                    ***0***         super.run_phase(phase);
    21                                               
    22              1                    ***0***          forever begin
    23              1                    ***0***             stim_seq_item=RAM_seq_item::type_id::create("stim_seq_item");
    24              1                    ***0***             seq_item_port.get_next_item(stim_seq_item);
    25                                               
    26              1                    ***0***              RAM_driver_vif.din=stim_seq_item.din;
    27              1                    ***0***              RAM_driver_vif.rst_n=stim_seq_item.rst_n;
    28              1                    ***0***              RAM_driver_vif.rx_valid=stim_seq_item.rx_valid;
    29              1                    ***0***              RAM_driver_golden_vif.din=stim_seq_item.din;
    30              1                    ***0***              RAM_driver_golden_vif.rst_n=stim_seq_item.rst_n;
    31              1                    ***0***              RAM_driver_golden_vif.rx_valid=stim_seq_item.rx_valid;
    32                                               
    33              1                    ***0***             @(negedge RAM_driver_vif.clk);
    34              1                    ***0***             seq_item_port.item_done(stim_seq_item);


=================================================================================
=== Instance: /RAM_sequencer_pkg
=== Design Unit: work.RAM_sequencer_pkg
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                       4         0         4     0.00%

================================Statement Details================================

Statement Coverage for instance /RAM_sequencer_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File RAM_sequencer.sv
    1                                                package RAM_sequencer_pkg;
    2                                                
    3                                                   import uvm_pkg::*;
    4                                                   import RAM_seq_item_pkg::*;
    5                                                   `include "uvm_macros.svh"
    6                                                
    7                                                
    8                                                   class RAM_sequencer extends uvm_sequencer #(RAM_seq_item);
    9               1                    ***0***                 `uvm_component_utils(RAM_sequencer)
    9               2                    ***0***     
    9               3                    ***0***     
    10                                                        
    11                                               
    12                                                        function new(string name="RAM_sequencer", uvm_component parent = null);
    13                                                           
    14              1                    ***0***                     super.new(name,parent);


=================================================================================
=== Instance: /RAM_agent_pkg
=== Design Unit: work.RAM_agent_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         8         0         8     0.00%

================================Branch Details================================

Branch Coverage for instance /RAM_agent_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File RAM_agent.sv
------------------------------------IF Branch------------------------------------
    35                                   ***0***     Count coming in to IF
    35              1                    ***0***                    if(!uvm_config_db #(spi_config):: get(this,"","RAM_config_obj",RAM_agent_config_obj))
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    36                                   ***0***     Count coming in to IF
    36              1                    ***0***                    `uvm_fatal("build_phase","agent cannot get config obj")
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    40                                   ***0***     Count coming in to IF
    40              1                    ***0***                    if(RAM_agent_config_obj.ag_s==UVM_AGENT_ACTIVE)begin
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    51                                   ***0***     Count coming in to IF
    51              1                    ***0***                    if(RAM_agent_config_obj.ag_s==UVM_AGENT_ACTIVE) begin
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      18         0        18     0.00%

================================Statement Details================================

Statement Coverage for instance /RAM_agent_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File RAM_agent.sv
    1                                                package RAM_agent_pkg;
    2                                                    
    3                                                    import uvm_pkg::*;
    4                                                    import RAM_sequencer_pkg::*;
    5                                                    import RAM_driver_pkg::*;
    6                                                    import RAM_monitor_pkg::*;
    7                                                    import myconfig::*;
    8                                                    import RAM_seq_item_pkg::*;
    9                                                    `include "uvm_macros.svh"
    10                                               
    11                                               
    12                                                   class RAM_agent extends uvm_agent;
    13              1                    ***0***             `uvm_component_utils(RAM_agent)
    13              2                    ***0***     
    13              3                    ***0***     
    14                                                       
    15                                                       RAM_sequencer sqr;
    16                                                       spi_config RAM_agent_config_obj;
    17                                                       RAM_driver drv;
    18                                                       RAM_monitor mon;
    19                                                       uvm_analysis_port #(RAM_seq_item) agent_port;
    20                                                       
    21                                                       function new(string name="RAM_agent", uvm_component parent = null);
    22                                                           
    23              1                    ***0***                 super.new(name,parent);
    24                                               
    25                                                       endfunction 
    26                                               
    27                                                       function void build_phase (uvm_phase phase);
    28                                                           
    29              1                    ***0***                    super.build_phase(phase);
    30                                               
    31              1                    ***0***                    agent_port=new("agent_port",this);
    32                                               
    33              1                    ***0***                    RAM_agent_config_obj=spi_config::type_id::create("RAM_agent_config",this);
    34                                               
    35                                                              if(!uvm_config_db #(spi_config):: get(this,"","RAM_config_obj",RAM_agent_config_obj))
    36              1                    ***0***                    `uvm_fatal("build_phase","agent cannot get config obj")
    37                                               
    38              1                    ***0***                    mon=RAM_monitor::type_id::create("mon",this);
    39                                               
    40                                                              if(RAM_agent_config_obj.ag_s==UVM_AGENT_ACTIVE)begin
    41              1                    ***0***                    sqr=RAM_sequencer::type_id::create("sqr",this); 
    42              1                    ***0***                    drv=RAM_driver::type_id::create("drv",this);
    43                                                              end
    44                                               
    45                                                       endfunction
    46                                               
    47                                                      function void connect_phase(uvm_phase phase);
    48                                                             
    49              1                    ***0***                    super.connect_phase(phase);
    50                                                              
    51                                                              if(RAM_agent_config_obj.ag_s==UVM_AGENT_ACTIVE) begin
    52              1                    ***0***                    drv.RAM_driver_vif=RAM_agent_config_obj.ram_config_vif;
    53              1                    ***0***                    drv.RAM_driver_golden_vif=RAM_agent_config_obj.ram_golden_config_vif;
    54              1                    ***0***                    drv.seq_item_port.connect(sqr.seq_item_export);
    55                                                              end
    56                                               
    57              1                    ***0***                    mon.RAM_monitor_vif=RAM_agent_config_obj.ram_config_vif;
    58              1                    ***0***                    mon.RAM_monitor_golden_vif=RAM_agent_config_obj.ram_golden_config_vif;               
    59                                                              
    60              1                    ***0***                    mon.mon_port.connect(agent_port);


=================================================================================
=== Instance: /RAM_env_pkg
=== Design Unit: work.RAM_env_pkg
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      11         1        10     9.09%

================================Statement Details================================

Statement Coverage for instance /RAM_env_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File RAM_env.sv
    1                                                package RAM_env_pkg;
    2                                                    
    3                                                    import uvm_pkg::*;
    4                                                    import RAM_agent_pkg::*;
    5                                                    import RAM_scoreboard_pkg::*;
    6                                                    import RAM_coverage_pkg::*;
    7                                                    `include "uvm_macros.svh"
    8                                                
    9                                                    class RAM_env extends uvm_env;
    10                                                       
    11              1                    ***0***             `uvm_component_utils(RAM_env)
    11              2                    ***0***     
    11              3                    ***0***     
    12                                                       
    13                                                       RAM_agent ag;
    14                                                       RAM_scoreboard sb;
    15                                                       RAM_coverage cov;
    16                                               
    17                                                       function new(string name="RAM_agent", uvm_component parent = null);
    18              1                          1                 super.new(name,parent);
    19                                                       endfunction 
    20                                                   
    21                                                       function void build_phase(uvm_phase phase);
    22                                                           
    23              1                    ***0***                 super.build_phase(phase);
    24                                               
    25              1                    ***0***                 ag=RAM_agent::type_id::create("ag",this);
    26              1                    ***0***                 sb=RAM_scoreboard::type_id::create("sb",this);
    27              1                    ***0***                 cov=RAM_coverage::type_id::create("cov",this);
    28                                               
    29                                                       endfunction
    30                                               
    31                                                       function void connect_phase(uvm_phase phase);
    32              1                    ***0***                 super.connect_phase(phase);
    33              1                    ***0***                 ag.agent_port.connect(sb.sb_export);
    34              1                    ***0***                 ag.agent_port.connect(cov.cov_export);


=================================================================================
=== Instance: /scoreboard
=== Design Unit: work.scoreboard
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         6         0         6     0.00%

================================Branch Details================================

Branch Coverage for instance /scoreboard

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File scoreboard.sv
------------------------------------IF Branch------------------------------------
    37                                   ***0***     Count coming in to IF
    37              1                    ***0***     			if(seq_item1.MISO != seq_item1.MISO_golden)begin
    41              1                    ***0***                  else begin
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    38                                   ***0***     Count coming in to IF
    38              1                    ***0***     				`uvm_error("run_phase",$sformatf("comparison failed,Transaction received by the Dut:%s while the refernce out:0b%b",seq_item1.convert2string_stimulus(), seq_item1.MISO_golden));
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    42                                   ***0***     Count coming in to IF
    42              1                    ***0***     	         `uvm_info("run_phase",$sformatf("correct spi out:%s", seq_item1.convert2string_stimulus()),UVM_HIGH);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       1         0         1     0.00%

================================Condition Details================================

Condition Coverage for instance /scoreboard --

  File scoreboard.sv
----------------Focused Condition View-------------------
Line       37 Item    1  (this.seq_item1.MISO != this.seq_item1.MISO_golden)
Condition totals: 0 of 1 input term covered = 0.00%

                                           Input Term   Covered  Reason for no coverage   Hint
                                          -----------  --------  -----------------------  --------------
  (this.seq_item1.MISO != this.seq_item1.MISO_golden)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                                             Non-masking condition(s)      
 ---------  ---------  --------------------                                   -------------------------     
  Row   1:    ***0***  (this.seq_item1.MISO != this.seq_item1.MISO_golden)_0  -                             
  Row   2:    ***0***  (this.seq_item1.MISO != this.seq_item1.MISO_golden)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      19         0        19     0.00%

================================Statement Details================================

Statement Coverage for instance /scoreboard --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File scoreboard.sv
    1                                                package scoreboard;
    2                                                import seq_item::*;
    3                                                import uvm_pkg::*;
    4                                                `include "uvm_macros.svh"
    5                                                
    6                                                class spi_scoreboard extends  uvm_scoreboard;
    7               1                    ***0***     	`uvm_component_utils(spi_scoreboard)
    7               2                    ***0***     
    7               3                    ***0***     
    8                                                    spi_seq_item seq_item1;
    9                                                
    10                                                   uvm_analysis_export #(spi_seq_item) sb_export;
    11                                                   uvm_tlm_analysis_fifo #(spi_seq_item) sb_fifo;
    12                                               
    13              1                    ***0***         int error_count=0; int correct_count=0;
    13              2                    ***0***     
    14                                               
    15                                                   function  new(string name="spi_scoreboard",uvm_component parent=null);
    16              1                    ***0***     		super.new(name,parent);
    17                                               	endfunction : new
    18                                               	
    19                                                   function void build_phase(uvm_phase phase);
    20              1                    ***0***         	super.build_phase(phase);
    21              1                    ***0***         	seq_item1=spi_seq_item::type_id::create("seq_item1");
    22              1                    ***0***         	sb_export=new("sb_export",this);
    23              1                    ***0***         	sb_fifo=new("sb_fifo",this);
    24                                                   endfunction 
    25                                               
    26                                               
    27                                                   function void connect_phase(uvm_phase phase);
    28              1                    ***0***     		super.connect_phase(phase);
    29              1                    ***0***     		sb_export.connect(sb_fifo.analysis_export);
    30                                               	endfunction 
    31                                               
    32                                               	task run_phase(uvm_phase phase);
    33              1                    ***0***     		super.run_phase(phase);
    34                                               
    35              1                    ***0***     		forever begin
    36              1                    ***0***     			sb_fifo.get(seq_item1);
    37                                               			if(seq_item1.MISO != seq_item1.MISO_golden)begin
    38              1                    ***0***     				`uvm_error("run_phase",$sformatf("comparison failed,Transaction received by the Dut:%s while the refernce out:0b%b",seq_item1.convert2string_stimulus(), seq_item1.MISO_golden));
    39              1                    ***0***     		         error_count++;
    40                                               	             end
    41                                                            else begin
    42              1                    ***0***     	         `uvm_info("run_phase",$sformatf("correct spi out:%s", seq_item1.convert2string_stimulus()),UVM_HIGH);
    43              1                    ***0***     	           correct_count++;


=================================================================================
=== Instance: /driver
=== Design Unit: work.driver
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         4         0         4     0.00%

================================Branch Details================================

Branch Coverage for instance /driver

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File driver.sv
------------------------------------IF Branch------------------------------------
    38                                   ***0***     Count coming in to IF
    38              1                    ***0***             if(driver_seq_item.data_in[10:8]==3'b111) begin
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    51                                   ***0***     Count coming in to IF
    51              1                    ***0***     		`uvm_info("run_phase", driver_seq_item.convert2string_stimulus(),UVM_HIGH)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       1         0         1     0.00%

================================Condition Details================================

Condition Coverage for instance /driver --

  File driver.sv
----------------Focused Condition View-------------------
Line       38 Item    1  (data_in[10:8] == 7)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (data_in[10:8] == 7)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:    ***0***  (data_in[10:8] == 7)_0  -                             
  Row   2:    ***0***  (data_in[10:8] == 7)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      25         0        25     0.00%

================================Statement Details================================

Statement Coverage for instance /driver --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File driver.sv
    1                                                package driver;
    2                                                import uvm_pkg::*;
    3                                                import seq_item::*;
    4                                                `include "uvm_macros.svh"
    5                                                
    6                                                class spi_driver extends  uvm_driver #(spi_seq_item);
    7               1                    ***0***     	`uvm_component_utils(spi_driver)
    7               2                    ***0***     
    7               3                    ***0***     
    8                                                spi_seq_item driver_seq_item;
    9                                                virtual SPI_IF driver_vif;
    10                                               virtual SPI_IF driver_golden_vif;
    11                                               
    12                                               	function new(string name= "spi_driver", uvm_component parent=null);
    13              1                    ***0***     	 super.new(name,parent);
    14                                               endfunction
    15                                               
    16                                               task run_phase(uvm_phase phase);
    17              1                    ***0***     	super.run_phase(phase);
    18              1                    ***0***     	forever begin
    19              1                    ***0***     		driver_seq_item=spi_seq_item::type_id::create("driver_seq_item");
    20              1                    ***0***     		seq_item_port.get_next_item(driver_seq_item);
    21                                               		
    22              1                    ***0***     		driver_vif.rst_n=driver_seq_item.rst_n;
    23              1                    ***0***     		driver_golden_vif.rst_n=driver_seq_item.rst_n;
    24                                               
    25              1                    ***0***     		driver_vif.SS_n=0;
    26              1                    ***0***     		driver_golden_vif.SS_n=0;
    27                                               		
    28              1                    ***0***             @(negedge driver_vif.clk);
    29                                               
    30              1                    ***0***     		for(int i=10;i>=0;i--) begin
    30              2                    ***0***     
    31                                               
    32              1                    ***0***             driver_vif.MOSI=driver_seq_item.data_in[i];
    33              1                    ***0***             driver_golden_vif.MOSI=driver_seq_item.data_in[i];
    34              1                    ***0***             @(negedge driver_vif.clk);
    35                                               
    36                                                       end
    37                                               
    38                                                       if(driver_seq_item.data_in[10:8]==3'b111) begin
    39              1                    ***0***             repeat(9) begin
    40                                                           
    41              1                    ***0***                 @(negedge driver_vif.clk);         
    42                                               
    43                                                       end
    44                                                      end
    45                                                   
    46              1                    ***0***     		driver_vif.SS_n=1;
    47              1                    ***0***             driver_golden_vif.SS_n=1;
    48              1                    ***0***     		@(negedge driver_vif.clk);
    49                                               
    50              1                    ***0***     		seq_item_port.item_done();
    51              1                    ***0***     		`uvm_info("run_phase", driver_seq_item.convert2string_stimulus(),UVM_HIGH)


=================================================================================
=== Instance: /monitor
=== Design Unit: work.monitor
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         2         0         2     0.00%

================================Branch Details================================

Branch Coverage for instance /monitor

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File monitor.sv
------------------------------------IF Branch------------------------------------
    41                                   ***0***     Count coming in to IF
    41              1                    ***0***         `uvm_info("run_phase",mon_seq_item.convert2string_stimulus(),UVM_HIGH)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      17         0        17     0.00%

================================Statement Details================================

Statement Coverage for instance /monitor --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File monitor.sv
    1                                                package monitor;
    2                                                import seq_item::*;
    3                                                import uvm_pkg::*;
    4                                                `include "uvm_macros.svh"
    5                                                
    6                                                class spi_monitor extends  uvm_monitor;
    7               1                    ***0***     	`uvm_component_utils(spi_monitor)
    7               2                    ***0***     
    7               3                    ***0***     
    8                                                 
    9                                                 spi_seq_item mon_seq_item;
    10                                                virtual SPI_IF mointor_vif;
    11                                                virtual SPI_IF mointor_golden_vif;
    12                                               
    13                                                uvm_analysis_port #(spi_seq_item) mon_ap;
    14                                               
    15                                               	function new(string name= "spi_monitor", uvm_component parent=null);
    16              1                    ***0***     	super.new(name,parent);
    17                                                   endfunction
    18                                               
    19                                               function void build_phase(uvm_phase phase);
    20              1                    ***0***     	super.build_phase(phase);
    21              1                    ***0***     	mon_ap=new("mon_ap",this);
    22                                               endfunction 
    23                                               
    24                                               task run_phase(uvm_phase phase);
    25              1                    ***0***     	super.run_phase(phase);
    26                                               
    27              1                    ***0***     forever begin
    28              1                    ***0***     mon_seq_item=spi_seq_item::type_id::create("mon_seq_item");
    29                                               
    30              1                    ***0***     	@(negedge mointor_vif.clk);
    31                                               	
    32              1                    ***0***     	mon_seq_item.MOSI=mointor_vif.MOSI;
    33              1                    ***0***     	mon_seq_item.rst_n=mointor_vif.rst_n;
    34              1                    ***0***     	mon_seq_item.SS_n=mointor_vif.SS_n;
    35              1                    ***0***     	mon_seq_item.MISO=mointor_vif.MISO;
    36                                               
    37              1                    ***0***     	mon_seq_item.MISO_golden=mointor_golden_vif.MISO;
    38                                               
    39                                               
    40              1                    ***0***         mon_ap.write(mon_seq_item);
    41              1                    ***0***         `uvm_info("run_phase",mon_seq_item.convert2string_stimulus(),UVM_HIGH)


=================================================================================
=== Instance: /sequencer
=== Design Unit: work.sequencer
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                       4         0         4     0.00%

================================Statement Details================================

Statement Coverage for instance /sequencer --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File sequencer.sv
    1                                                package sequencer;
    2                                                import seq_item::*;
    3                                                import uvm_pkg::*;
    4                                                `include "uvm_macros.svh"
    5                                                	class spi_sequencer extends uvm_sequencer #(spi_seq_item);
    6               1                    ***0***     	`uvm_component_utils(spi_sequencer)
    6               2                    ***0***     
    6               3                    ***0***     
    7                                                	function  new(string name="spi_sequencer",uvm_component parent=null);
    8               1                    ***0***     		super.new(name,parent);


=================================================================================
=== Instance: /agent
=== Design Unit: work.agent
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         4         0         4     0.00%

================================Branch Details================================

Branch Coverage for instance /agent

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File agent.sv
------------------------------------IF Branch------------------------------------
    24                                   ***0***     Count coming in to IF
    24              1                    ***0***         if(!uvm_config_db#(spi_config)::get(this, "", "SPI_config_obj",config1 ))
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    25                                   ***0***     Count coming in to IF
    25              1                    ***0***           `uvm_fatal("build_phase","unable to get config1 object")
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      17         0        17     0.00%

================================Statement Details================================

Statement Coverage for instance /agent --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File agent.sv
    1                                                package agent;
    2                                                import seq_item::*;
    3                                                import sequencer::*;
    4                                                import monitor::*;
    5                                                import driver::*;
    6                                                import myconfig::*;
    7                                                import uvm_pkg::*;
    8                                                `include "uvm_macros.svh"
    9                                                
    10                                               class spi_agent extends  uvm_agent;
    11              1                    ***0***     	`uvm_component_utils(spi_agent)
    11              2                    ***0***     
    11              3                    ***0***     
    12                                                  spi_monitor mon;
    13                                                  spi_driver drv;
    14                                                  spi_config config1;
    15                                                  spi_sequencer sqr;
    16                                                  uvm_analysis_port #(spi_seq_item) agt_ap;
    17                                               
    18                                               	function new(string name= "spi_agent", uvm_component parent=null);
    19              1                    ***0***     	 super.new(name,parent);
    20                                               endfunction
    21                                               	
    22                                               function void build_phase(uvm_phase phase);
    23              1                    ***0***     	super.build_phase(phase);
    24                                                   if(!uvm_config_db#(spi_config)::get(this, "", "SPI_config_obj",config1 ))
    25              1                    ***0***           `uvm_fatal("build_phase","unable to get config1 object")
    26                                               
    27              1                    ***0***        mon=spi_monitor::type_id::create("mon",this);
    28              1                    ***0***        drv=spi_driver::type_id::create("drv",this);
    29              1                    ***0***        sqr=spi_sequencer::type_id::create("sqr",this);
    30              1                    ***0***        agt_ap=new("agt_ap",this);
    31                                               endfunction 
    32                                               
    33                                               function void connect_phase(uvm_phase phase);
    34              1                    ***0***     	super.connect_phase(phase);
    35              1                    ***0***     	mon.mointor_vif=config1.spi_config_vif;
    36              1                    ***0***     	drv.driver_vif=config1.spi_config_vif;
    37                                               
    38              1                    ***0***     	mon.mointor_golden_vif=config1.spi_golden_config_vif;
    39              1                    ***0***     	drv.driver_golden_vif=config1.spi_golden_config_vif;
    40                                               
    41              1                    ***0***     	drv.seq_item_port.connect(sqr.seq_item_export);
    42              1                    ***0***     	mon.mon_ap.connect(agt_ap);


=================================================================================
=== Instance: /coverage
=== Design Unit: work.coverage
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         2         0         2     0.00%

================================Branch Details================================

Branch Coverage for instance /coverage

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File coverage_collector.sv
------------------------------------IF Branch------------------------------------
    48                                   ***0***     Count coming in to IF
    48              1                    ***0***     	        `uvm_info("run_phase","coverage run phase has started",UVM_LOW);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      15         0        15     0.00%

================================Statement Details================================

Statement Coverage for instance /coverage --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File coverage_collector.sv
    1                                                package coverage;
    2                                                import seq_item::*;
    3                                                import uvm_pkg::*;
    4                                                `include "uvm_macros.svh"
    5                                                
    6                                                class spi_coverage extends  uvm_component;
    7               1                    ***0***     	`uvm_component_utils(spi_coverage)
    7               2                    ***0***     
    7               3                    ***0***     
    8                                                    spi_seq_item cov_seq_item;
    9                                                    uvm_analysis_export #(spi_seq_item) cov_export;
    10                                                   uvm_tlm_analysis_fifo #(spi_seq_item) cov_fifo;
    11                                               
    12                                                   covergroup cvr_grp_spi;
    13                                               
    14                                                           c_din: coverpoint cov_seq_item.data_in iff(cov_seq_item.rst_n){
    15                                               
    16                                                           bins address_write_max={11'b000_1111_1111};
    17                                                           bins address_read_max = {11'b110_1111_1111};
    18                                                           bins address_write_min={11'b000_0000_0000};
    19                                                           bins address_read_min = {11'b110_0000_0000};
    20                                                          ignore_bins not_address[] = {[11'b000_0000_0001:11'b000_1111_1110],[11'b110_0000_0001:11'b110_1111_1110]};
    21                                                       
    22                                                       
    23                                                       }
    24                                               
    25                                                       endgroup
    26                                               
    27                                               
    28                                                       function new(string name="spi_coverage",uvm_component parent=null);
    29              1                    ***0***             	super.new(name,parent);
    30              1                    ***0***             	cvr_grp_spi=new();
    31                                                       endfunction 
    32                                               
    33                                               
    34                                                       function void connect_phase(uvm_phase phase);
    35              1                    ***0***             	super.connect_phase(phase);
    36              1                    ***0***                 cov_export.connect(cov_fifo.analysis_export);
    37                                               
    38                                                       	endfunction
    39                                               
    40                                                       function void build_phase(uvm_phase phase);
    41              1                    ***0***             	super.build_phase(phase);
    42              1                    ***0***             	cov_export=new("cov_export",this);
    43              1                    ***0***             	cov_fifo=new("cov_fifo",this);
    44                                                       endfunction
    45                                               
    46                                                       task run_phase(uvm_phase phase);
    47              1                    ***0***     	        super.run_phase(phase);
    48              1                    ***0***     	        `uvm_info("run_phase","coverage run phase has started",UVM_LOW);
    49              1                    ***0***                 forever begin
    50                                                           
    51              1                    ***0***     	        	cov_fifo.get(cov_seq_item);
    52                                                               
    53              1                    ***0***                     cvr_grp_spi.sample();


=================================================================================
=== Instance: /env
=== Design Unit: work.env
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      11         1        10     9.09%

================================Statement Details================================

Statement Coverage for instance /env --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File enviroment.sv
    1                                                package env;
    2                                                import coverage::*;
    3                                                import agent::*;
    4                                                import scoreboard::*;
    5                                                import uvm_pkg::*;
    6                                                `include "uvm_macros.svh"
    7                                                
    8                                                class spi_env extends uvm_env;
    9               1                    ***0***     	`uvm_component_utils(spi_env)
    9               2                    ***0***     
    9               3                    ***0***     
    10                                               
    11                                               	spi_scoreboard sb;
    12                                               	spi_coverage cov;
    13                                               	spi_agent agt;
    14                                               
    15                                               	function new(string name= "spi_env", uvm_component parent=null);
    16              1                          1     	 super.new(name,parent);
    17                                                      endfunction
    18                                               
    19                                                    function void build_phase(uvm_phase phase);
    20              1                    ***0***          	super.build_phase(phase);
    21              1                    ***0***          	sb=spi_scoreboard::type_id::create("sb",this);
    22              1                    ***0***          	cov=spi_coverage::type_id::create("cov",this);
    23              1                    ***0***          	agt=spi_agent::type_id::create("agt",this);
    24                                                    	
    25                                                    endfunction
    26                                               
    27                                               
    28                                               	function void connect_phase(uvm_phase phase);
    29              1                    ***0***          	super.connect_phase(phase);
    30              1                    ***0***          	agt.agt_ap.connect(sb.sb_export);
    31              1                    ***0***          	agt.agt_ap.connect(cov.cov_export);


=================================================================================
=== Instance: /spi_test1
=== Design Unit: work.spi_test1
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        22         2        20     9.09%

================================Branch Details================================

Branch Coverage for instance /spi_test1

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File test.sv
------------------------------------IF Branch------------------------------------
    35                                         1     Count coming in to IF
    35              1                          1     		 if(!uvm_config_db#(virtual RAM_intf)::get(this, "", "RAM_interface_DUT",  ram_config_obj.ram_config_vif ))
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    36                                         1     Count coming in to IF
    36              1                          1     			`uvm_fatal("build_phase","TEST - unable to get RAM DUT VF from the uvm_config_db")
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    39                                   ***0***     Count coming in to IF
    39              1                    ***0***     		if(!uvm_config_db#(virtual RAM_intf)::get(this, "", "RAM_interface_golden",  ram_config_obj.ram_golden_config_vif))
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    40                                   ***0***     Count coming in to IF
    40              1                    ***0***     			`uvm_fatal("build_phase","TEST - unable to get RAM golden VF from the uvm_config_db")
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    49                                   ***0***     Count coming in to IF
    49              1                    ***0***     		if(!uvm_config_db#(virtual SPI_IF)::get(this, "", "SPI_interface_DUT",  spi_config_obj.spi_config_vif ))
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    50                                   ***0***     Count coming in to IF
    50              1                    ***0***     			`uvm_fatal("build_phase","TEST - unable to get SPI VF from the uvm_config_db")
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    53                                   ***0***     Count coming in to IF
    53              1                    ***0***     		if(!uvm_config_db#(virtual SPI_IF)::get(this, "", "SPI_interface_golden",  spi_config_obj.spi_golden_config_vif))
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    54                                   ***0***     Count coming in to IF
    54              1                    ***0***     			`uvm_fatal("build_phase","TEST - unable to get SPI Golden VF from the uvm_config_db")
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    68                                   ***0***     Count coming in to IF
    68              1                    ***0***        	`uvm_info("run_phase","writing Started",UVM_LOW);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    70                                   ***0***     Count coming in to IF
    70              1                    ***0***        	`uvm_info("run_phase","reading Started",UVM_LOW);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    72                                   ***0***     Count coming in to IF
    72              1                    ***0***     	`uvm_info("run_phase","reading Finished",UVM_LOW);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      27        10        17    37.03%

================================Statement Details================================

Statement Coverage for instance /spi_test1 --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File test.sv
    1                                                package spi_test1;
    2                                                import env::*;
    3                                                import myconfig::*;
    4                                                import seq::*;
    5                                                import uvm_pkg::*;
    6                                                import RAM_env_pkg::*;
    7                                                `include "uvm_macros.svh"
    8                                                
    9                                                class spi_test extends  uvm_test;
    10              1                    ***0***     	`uvm_component_utils(spi_test)
    10              2                    ***0***     
    10              3                          1     
    11                                               	spi_config  spi_config_obj;
    12                                               	spi_config ram_config_obj;
    13                                               	spi_env myenv;
    14                                               	RAM_env ram_env;
    15                                               
    16                                               	spi_sequence_write seq_write;
    17                                                   spi_sequence_read seq_read;
    18                                               
    19                                               	function new(string name="spi_test",uvm_component parent=null);
    20              1                          1     	  super.new(name,parent);
    21                                                    endfunction 
    22                                               	
    23                                               	function void build_phase(uvm_phase phase);
    24              1                          1     		super.build_phase(phase);
    25                                               		
    26              1                          1     		spi_config_obj=spi_config::type_id::create(" spi_config_obj");
    27              1                          1     		ram_config_obj=spi_config::type_id::create(" ram_config_obj");
    28                                               
    29              1                          1     		myenv=spi_env::type_id::create("myenv",this);
    30              1                          1     		ram_env=RAM_env::type_id::create("ram_env",this);
    31                                               
    32              1                          1     		seq_write=spi_sequence_write::type_id::create("seq_write");
    33              1                          1     		seq_read=spi_sequence_read::type_id::create("seq_read");
    34                                               
    35                                               		 if(!uvm_config_db#(virtual RAM_intf)::get(this, "", "RAM_interface_DUT",  ram_config_obj.ram_config_vif ))
    36              1                          1     			`uvm_fatal("build_phase","TEST - unable to get RAM DUT VF from the uvm_config_db")
    37                                               
    38                                               
    39                                               		if(!uvm_config_db#(virtual RAM_intf)::get(this, "", "RAM_interface_golden",  ram_config_obj.ram_golden_config_vif))
    40              1                    ***0***     			`uvm_fatal("build_phase","TEST - unable to get RAM golden VF from the uvm_config_db")
    41                                               
    42              1                    ***0***     		ram_config_obj.ag_s=UVM_AGENT_PASSIVE;
    43                                               
    44              1                    ***0***     		uvm_config_db#(spi_config)::set(this, "*", "RAM_config_obj", ram_config_obj);
    45                                               
    46                                               
    47                                               
    48                                               
    49                                               		if(!uvm_config_db#(virtual SPI_IF)::get(this, "", "SPI_interface_DUT",  spi_config_obj.spi_config_vif ))
    50              1                    ***0***     			`uvm_fatal("build_phase","TEST - unable to get SPI VF from the uvm_config_db")
    51                                               
    52                                               
    53                                               		if(!uvm_config_db#(virtual SPI_IF)::get(this, "", "SPI_interface_golden",  spi_config_obj.spi_golden_config_vif))
    54              1                    ***0***     			`uvm_fatal("build_phase","TEST - unable to get SPI Golden VF from the uvm_config_db")
    55                                               
    56              1                    ***0***     		spi_config_obj.ag_s=UVM_AGENT_ACTIVE;
    57                                               
    58              1                    ***0***     		uvm_config_db#(spi_config)::set(this, "*", "SPI_config_obj", spi_config_obj);
    59                                               
    60                                               		
    61                                               
    62                                               	endfunction 
    63                                               
    64                                               
    65                                                  task run_phase(uvm_phase phase);
    66              1                    ***0***        	super.run_phase(phase);
    67              1                    ***0***        	phase.raise_objection(this);
    68              1                    ***0***        	`uvm_info("run_phase","writing Started",UVM_LOW);
    69              1                    ***0***        	seq_write.start(myenv.agt.sqr);
    70              1                    ***0***        	`uvm_info("run_phase","reading Started",UVM_LOW);
    71              1                    ***0***         seq_read.start(myenv.agt.sqr);
    72              1                    ***0***     	`uvm_info("run_phase","reading Finished",UVM_LOW);
    73              1                    ***0***        	phase.drop_objection(this);



DIRECTIVE COVERAGE:
--------------------------------------------------------------------------------------------
Name                                     Design Design   Lang File(Line)      Hits Status    
                                         Unit   UnitType                                     
--------------------------------------------------------------------------------------------
/top/DUT/SPI_AS/cover_assertion          SPI_assertions Verilog  SVA  SPI_assertions.sv(7)
                                                                                 0 ZERO      
/top/DUT/SPI_AS/c_not_reading_data       SPI_assertions Verilog  SVA  SPI_assertions.sv(19)
                                                                                 0 ZERO      

TOTAL DIRECTIVE COVERAGE: 0.00%  COVERS: 2

ASSERTION RESULTS:
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/top/DUT/SPI_AS/a_not_reading_data
                     SPI_assertions.sv(18)              0          0

Total Coverage By Instance (filtered view): 0.74%

